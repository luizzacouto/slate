<h1 id='usuarios'>Usuários</h1><h2 id='listar-alunos-ou-colaboradores'><img src="/images/get.png"> Listar alunos ou colaboradores</h2>
<p>View list of all students or collaborators. This list is paginated and filtered if needed.</p>
<h3 id='http-request'>HTTP Request</h3>
<p><code>GET /students or /collaborators</code></p>
<pre class="highlight ruby tab-ruby"><code><span class="no">EXEMPLO</span> <span class="no">DE</span> <span class="no">CHAMADA</span> <span class="no">UTILIZANDO</span> <span class="no">RUBY</span>
</code></pre><pre class="highlight python tab-python"><code><span class="n">EXEMPLO</span> <span class="n">DE</span> <span class="n">CHAMADA</span> <span class="n">UTILIZADO</span> <span class="n">PHYTON</span>
</code></pre><pre class="highlight javascript tab-javascript"><code><span class="nx">EXEMPLO</span> <span class="nx">DE</span> <span class="nx">CHAMADA</span> <span class="nx">UTILIZANDO</span> <span class="nx">JS</span>
</code></pre>
<blockquote>
<p>The above command returns JSON structured like this:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">[</span><span class="w">
  </span><span class="err">EXEMPLO</span><span class="w"> </span><span class="err">DE</span><span class="w"> </span><span class="err">JSON</span><span class="w">
</span><span class="p">]</span><span class="w">
</span></code></pre><h3 id='parametros-opcionais'>Parâmetros opcionais</h3>
<table><thead>
<tr>
<th>Nome</th>
<th>Tipo</th>
<th>Descrição</th>
</tr>
</thead><tbody>
<tr>
<td>school_product_id</td>
<td>Array<Integer></td>
<td>Student filter. Filter by school_product_id. Only users that have relations with some object with the id passed in the school_product_id will be in the list.</td>
</tr>
<tr>
<td>course_class_id</td>
<td>Array<Integer></td>
<td>Student filter. Filter by course_class_id. Only users that have relations with some object with the id passed in the course_class_id will be in the list.</td>
</tr>
<tr>
<td>uninitiated_lesson_id</td>
<td>Array<Integer></td>
<td>Student filter. Filter by uninitiated_leson_id. Only users that have relations with some object with the id passed in the uninitiated_leson_id will be in the list.</td>
</tr>
<tr>
<td>course_id</td>
<td>Array<Integer></td>
<td>Student filter. Filter by course_id. Only users that have relations with some object with the id passed in the course_id will be in the list.</td>
</tr>
<tr>
<td>enrollment_status</td>
<td>Array<String></td>
<td>Student filter. Filter by enrollmen_status. The available statuses are pending, active, expired, deactivated and canceled.</td>
</tr>
<tr>
<td>status</td>
<td>Array<String></td>
<td>Student filter. Filter by status</td>
</tr>
<tr>
<td>progress</td>
<td>Float</td>
<td>Student filter. Filter by progress. If used together with school_product_idòr it will return only students that have that progress in the products selected. <em>Important</em>: when this filter is used theprogress&gt;=andprogress&lt;=` will be ignored!</td>
</tr>
<tr>
<td>progress&gt;=</td>
<td>Float</td>
<td>Student filter. Filter students that have progress equal or greater than the progress given. If used together with school_product_id it will return only students that have that progress in the products selected. This filter can be used together with progress&lt;=.</td>
</tr>
<tr>
<td>progress&lt;=</td>
<td>Float</td>
<td>Student filter. Filter students that have progress equal or less than the progress given. If used together with school_product_id it will return only students that have that progress in the products selected. This filter can be used together with progress&lt;=.</td>
</tr>
<tr>
<td>completed_progress_at&gt;=</td>
<td>DateTime</td>
<td>Student filter. Filter students that have completed the progress at the given DateTime or after that. If used together with school_product_id it will filter by students that completed the progress in those courses.</td>
</tr>
<tr>
<td>completed_progress_at&lt;=</td>
<td>DateTime</td>
<td>Student filter. Filter students that have completed the progress at the given DateTime or before that. If used together with school_product_id it will filter by students that completed the progress in those courses.</td>
</tr>
<tr>
<td>enrolled_at&gt;=</td>
<td>DateTime</td>
<td>Student filter. Filter students that have activated an enrollment at the given DateTime or after that. If used together with school_product_id it will filter by students that activated an enrollment in those courses.</td>
</tr>
<tr>
<td>enrolled_at&lt;=</td>
<td>DateTime</td>
<td>Student filter. Filter students that have activated an enrollment at the given DateTime or before that. If used together with school_product_id it will filter by students that activated an enrollment in those courses.</td>
</tr>
<tr>
<td>last_progress_updated_at&gt;=</td>
<td>DateTime</td>
<td>Student filter. Filter students that have did some progress at the given DateTime or after that. ps: Some school&#39;s actions does not generate progress. If used together with school_product_id it will filter by students that have progresses in those courses.</td>
</tr>
<tr>
<td>last_progress_updated_at&lt;=</td>
<td>DateTime</td>
<td>Student filter. Filter students that have did some progress at the given DateTime or before that. ps: Some school&#39;s actions does not generate progress. If used together with school_product_id it will filter by students that have progresses in those courses.</td>
</tr>
<tr>
<td>ids</td>
<td>String</td>
<td>Filter by id. Return the users with the passed ids.</td>
</tr>
<tr>
<td>full_name</td>
<td>String</td>
<td>Filter by full_name. This is an espcial filter, with it you can pass any group of chars, the filter will select the users that the fullname or the email includes those chars.</td>
</tr>
<tr>
<td>sort</td>
<td>String</td>
<td>Filter to sort the users by an attribute</td>
</tr>
<tr>
<td>direction</td>
<td>String</td>
<td>Filter to indicate the sort direction. It can be asc ou desc</td>
</tr>
</tbody></table>
<h2 id='criar-alunos-ou-colaboradores'><img src="/images/post.png"> Criar alunos ou colaboradores</h2>
<p>Create student or collaborator</p>
<h3 id='http-request-2'>HTTP Request</h3>
<p><code>POST /students/ or /collaborators/</code></p>
<pre class="highlight ruby tab-ruby"><code><span class="no">EXEMPLO</span> <span class="no">DE</span> <span class="no">CHAMADA</span> <span class="no">UTILIZANDO</span> <span class="no">RUBY</span>
</code></pre><pre class="highlight python tab-python"><code><span class="n">EXEMPLO</span> <span class="n">DE</span> <span class="n">CHAMADA</span> <span class="n">UTILIZADO</span> <span class="n">PHYTON</span>
</code></pre><pre class="highlight javascript tab-javascript"><code><span class="nx">EXEMPLO</span> <span class="nx">DE</span> <span class="nx">CHAMADA</span> <span class="nx">UTILIZANDO</span> <span class="nx">JS</span>
</code></pre>
<blockquote>
<p>The above command returns JSON structured like this:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">[</span><span class="w">
  </span><span class="err">EXEMPLO</span><span class="w"> </span><span class="err">DE</span><span class="w"> </span><span class="err">JSON</span><span class="w">
</span><span class="p">]</span><span class="w">
</span></code></pre><h3 id='parametros-obrigatorios'>Parâmetros obrigatórios</h3>
<table><thead>
<tr>
<th>Nome</th>
<th>Tipo</th>
<th>Descrição</th>
</tr>
</thead><tbody>
<tr>
<td>user</td>
<td>Hash</td>
<td>The user to create</td>
</tr>
<tr>
<td>user[first_name]</td>
<td>String</td>
<td>User first name</td>
</tr>
<tr>
<td>user[email]</td>
<td>String</td>
<td>User email that should be uniq</td>
</tr>
<tr>
<td>user[password]</td>
<td>String</td>
<td>Should be greater than 6 chars</td>
</tr>
<tr>
<td>user[password_confirmation]</td>
<td>String</td>
<td>Should be equal the password</td>
</tr>
</tbody></table>
<h3 id='parametros-opcionais-2'>Parâmetros opcionais</h3>
<table><thead>
<tr>
<th>Nome</th>
<th>Tipo</th>
<th>Descrição</th>
</tr>
</thead><tbody>
<tr>
<td>user[last_name]</td>
<td>String</td>
<td>User last name</td>
</tr>
<tr>
<td>user[username]</td>
<td>String</td>
<td>Nickname</td>
</tr>
<tr>
<td>user[cpf]</td>
<td>String</td>
<td>CPF</td>
</tr>
<tr>
<td>user[rg]</td>
<td>String</td>
<td>RG</td>
</tr>
<tr>
<td>user[phone]</td>
<td>String</td>
<td></td>
</tr>
<tr>
<td>user[extra_phone]</td>
<td>String</td>
<td></td>
</tr>
<tr>
<td>user[skype]</td>
<td>String</td>
<td></td>
</tr>
<tr>
<td>user[twitter]</td>
<td>String</td>
<td></td>
</tr>
<tr>
<td>user[facebook]</td>
<td>String</td>
<td></td>
</tr>
<tr>
<td>user[company_name]</td>
<td>String</td>
<td></td>
</tr>
<tr>
<td>user[company_position]</td>
<td>String</td>
<td></td>
</tr>
<tr>
<td>user[born_at]</td>
<td>DateTime</td>
<td></td>
</tr>
<tr>
<td>user[biography]</td>
<td>String</td>
<td></td>
</tr>
<tr>
<td>user[cover_image_url]</td>
<td>String</td>
<td></td>
</tr>
<tr>
<td>user[created_at]</td>
<td>DateTime</td>
<td>Exists only for Student. It overwrites the default created_at, normally used to migrate old students.</td>
</tr>
<tr>
<td>user[last_sign_in_at]</td>
<td>DateTime</td>
<td>Exists only for Student</td>
</tr>
<tr>
<td>user[role_ids]</td>
<td>Array<Integer></td>
<td>Roles to associate to the User</td>
</tr>
<tr>
<td>user[address_attributes]</td>
<td>Hash</td>
<td></td>
</tr>
<tr>
<td>user[address_attributes][id]</td>
<td>Integer</td>
<td>If not present it will create a new address</td>
</tr>
<tr>
<td>user[address_attributes][street]</td>
<td>String</td>
<td>It will update the attribute if the user[address_attributes][id] is present</td>
</tr>
<tr>
<td>user[address_attributes][number]</td>
<td>Integer</td>
<td>It will update the attribute if the user[address_attributes][id] is present</td>
</tr>
<tr>
<td>user[address_attributes][complement]</td>
<td>String</td>
<td>It will update the attribute if the user[address_attributes][id] is present</td>
</tr>
<tr>
<td>user[address_attributes][city]</td>
<td>String</td>
<td>It will update the attribute if the user[address_attributes][id] is present</td>
</tr>
<tr>
<td>user[address_attributes][state]</td>
<td>String</td>
<td>It will update the attribute if the user[address_attributes][id] is present</td>
</tr>
<tr>
<td>user[address_attributes][zip_code]</td>
<td>String</td>
<td>It will update the attribute if the user[address_attributes][id] is present</td>
</tr>
<tr>
<td>user[address_attributes][district]</td>
<td>String</td>
<td>It will update the attribute if the user[address_attributes][id] is present</td>
</tr>
</tbody></table>
<h2 id='atualizar-um-aluno-ou-colaborador'><img src="/images/post.png"> Atualizar um aluno ou colaborador</h2>
<p>Update student or collaborator</p>
<h3 id='http-request-3'>HTTP Request</h3>
<p><code>PUT /students/:id or /collaborators/:id</code></p>
<pre class="highlight ruby tab-ruby"><code><span class="no">EXEMPLO</span> <span class="no">DE</span> <span class="no">CHAMADA</span> <span class="no">UTILIZANDO</span> <span class="no">RUBY</span>
</code></pre><pre class="highlight python tab-python"><code><span class="n">EXEMPLO</span> <span class="n">DE</span> <span class="n">CHAMADA</span> <span class="n">UTILIZADO</span> <span class="n">PHYTON</span>
</code></pre><pre class="highlight javascript tab-javascript"><code><span class="nx">EXEMPLO</span> <span class="nx">DE</span> <span class="nx">CHAMADA</span> <span class="nx">UTILIZANDO</span> <span class="nx">JS</span>
</code></pre>
<blockquote>
<p>The above command returns JSON structured like this:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">[</span><span class="w">
  </span><span class="err">EXEMPLO</span><span class="w"> </span><span class="err">DE</span><span class="w"> </span><span class="err">JSON</span><span class="w">
</span><span class="p">]</span><span class="w">
</span></code></pre><h3 id='parametros-obrigatorios-2'>Parâmetros obrigatórios</h3>
<table><thead>
<tr>
<th>Nome</th>
<th>Tipo</th>
<th>Descrição</th>
</tr>
</thead><tbody>
<tr>
<td>user</td>
<td>Hash</td>
<td>The user to create</td>
</tr>
<tr>
<td>user[first_name]</td>
<td>String</td>
<td>The identifier of the Registration object</td>
</tr>
<tr>
<td>user[email]</td>
<td>String</td>
<td>The identifier of the Registration object</td>
</tr>
<tr>
<td>user[password]</td>
<td>String</td>
<td>The identifier of the SchoolProduct object</td>
</tr>
<tr>
<td>user[password_confirmation]</td>
<td>String</td>
<td>Enrollment type, can be indeterminate, time or attempts</td>
</tr>
</tbody></table>
<h2 id='excluir-aluno-ou-colaborador'><img src="/images/delete.png"> Excluir aluno ou colaborador</h2>
<p>Destroy a student or collaborator</p>
<h3 id='http-request-4'>HTTP Request</h3>
<p><code>DELETE /students/:id or /collaborators/:id
</code></p>
<pre class="highlight ruby tab-ruby"><code><span class="no">EXEMPLO</span> <span class="no">DE</span> <span class="no">CHAMADA</span> <span class="no">UTILIZANDO</span> <span class="no">RUBY</span>
</code></pre><pre class="highlight python tab-python"><code><span class="n">EXEMPLO</span> <span class="n">DE</span> <span class="n">CHAMADA</span> <span class="n">UTILIZADO</span> <span class="n">PHYTON</span>
</code></pre><pre class="highlight javascript tab-javascript"><code><span class="nx">EXEMPLO</span> <span class="nx">DE</span> <span class="nx">CHAMADA</span> <span class="nx">UTILIZANDO</span> <span class="nx">JS</span>
</code></pre>
<blockquote>
<p>The above command returns JSON structured like this:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">[</span><span class="w">
  </span><span class="err">EXEMPLO</span><span class="w"> </span><span class="err">DE</span><span class="w"> </span><span class="err">JSON</span><span class="w">
</span><span class="p">]</span><span class="w">
</span></code></pre><h3 id='parametros-obrigatorios-3'>Parâmetros obrigatórios</h3>
<table><thead>
<tr>
<th>Nome</th>
<th>Tipo</th>
<th>Descrição</th>
</tr>
</thead><tbody>
<tr>
<td>id</td>
<td>Integer</td>
<td>Id of user</td>
</tr>
</tbody></table>
